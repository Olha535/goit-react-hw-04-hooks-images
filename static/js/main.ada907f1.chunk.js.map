{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","services/constants.js","services/api-service.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","components/App/App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","API_KEY","BASE_URL","searchQuery","page","a","url","axios","get","then","response","data","hits","map","id","largeImageURL","webformatURL","fetchImages","Searchbar","onSubmit","useState","setSearchQuery","className","s","searchbar","e","preventDefault","trim","toast","error","theme","searchForm","type","searchFormButton","searchFormButtonLabel","searchFormInput","autoComplete","autoFocus","placeholder","name","value","onChange","target","toLowerCase","ImageGalleryItem","image","tags","onImageClick","src","alt","onClick","ImageGalleryItemImage","ImageGallery","images","imageGallery","uuidv4","Button","button","modalRoot","document","querySelector","Modal","showModal","onClose","useEffect","window","addEventListener","onCloseModal","removeEventListener","code","createPortal","overlay","currentTarget","modal","Spinner","color","height","width","timeout","style","textAlign","App","setPage","setImages","setShowModal","loading","setLoading","setAlt","length","info","prevImages","message","scrollTo","top","documentElement","scrollHeight","behavior","getFetchImages","resetState","query","largeImageUrl","prevPage","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ada907f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3F97E\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2CNDi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__pNXjL\",\"modal\":\"Modal_modal__370FL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__MPtLW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1nkAe\"};","const API_KEY = '22909225-4bd408e854a1416d853656515';\nconst BASE_URL = 'https://pixabay.com/api';\n\nexport { API_KEY, BASE_URL };\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from '../services/constants';\n\nasync function fetchImages(searchQuery, page) {\n  const url = `${BASE_URL}/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  return axios\n    .get(url)\n    .then(response => response.data.hits)\n    .then(hits =>\n      hits.map(({ id, largeImageURL, webformatURL }) => ({\n        id,\n        webformatURL,\n        largeImageURL,\n      })),\n    );\n}\n\n// function fetchImages(searchQuery, page) {\n//   const url = `${BASE_URL}/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n//   return fetch(url)\n//     .then(response => response.json())\n//     .then(({ hits }) => {\n//       console.log('hits', hits);\n//       return hits;\n//     });\n// }\n\nexport default fetchImages;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleNameChange = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      toast.error('Check the correctness of the input', {\n        theme: 'colored',\n      });\n      return;\n    }\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <header className={s.searchbar}>\n      <form onSubmit={handleSubmit} className={s.searchForm}>\n        <button type=\"submit\" className={s.searchFormButton}>\n          <span className={s.searchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.searchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          onChange={handleNameChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({ image, tags, onImageClick }) {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        src={image}\n        alt={tags}\n        onClick={onImageClick}\n        className={s.ImageGalleryItemImage}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  tags: PropTypes.string,\n  image: PropTypes.string.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nexport default function ImageGallery({ images, onImageClick }) {\n  return (\n    <ul className={s.imageGallery}>\n      {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n        <ImageGalleryItem\n          key={`${id}-${uuidv4()}`}\n          image={webformatURL}\n          tags={tags}\n          onImageClick={() => onImageClick(largeImageURL, tags)}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n  onImageClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ onClick }) {\n  return (\n    <button className={s.button} type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ showModal, tags, onClose }) {\n  useEffect(() => {\n    window.addEventListener('keydown', onCloseModal);\n    return () => {\n      window.removeEventListener('keydown', onCloseModal);\n    };\n  });\n\n  const onCloseModal = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const onCloseBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.overlay} onClick={onCloseBackdrop}>\n      <div className={s.modal}>\n        <img src={showModal} alt={tags} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  showModal: PropTypes.string.isRequired,\n  tags: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default function Spinner() {\n  return (\n    <div>\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        timeout={3000}\n        style={{ textAlign: 'center' }}\n      />\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\nimport fetchImages from '../../services/api-service';\nimport Searchbar from '../Searchbar';\nimport ImageGallery from '../ImageGallery';\nimport Button from '../Button';\nimport Modal from '../Modal';\nimport Spinner from '../Loader';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [showModal, setShowModal] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [alt, setAlt] = useState(null);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    async function getFetchImages() {\n      try {\n        setLoading(true);\n        const images = await fetchImages(searchQuery, page);\n        if (!images.length) {\n          toast.info('Check the correctness of the input', {\n            theme: 'colored',\n          });\n        }\n        setImages(prevImages => [...prevImages, ...images]);\n      } catch (error) {\n        toast.error(error.message, { theme: 'colored' });\n      } finally {\n        page > 1 &&\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n\n        setLoading(false);\n      }\n    }\n    getFetchImages();\n  }, [page, searchQuery]);\n\n  const handleFormSubmit = query => {\n    if (searchQuery === query) {\n      return;\n    }\n    resetState();\n    setSearchQuery(query);\n  };\n\n  const loadMoBtn = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const handleImageClick = (largeImageUrl, tags) => {\n    setShowModal(largeImageUrl);\n    setAlt(tags);\n  };\n\n  const toggleModal = () => {\n    setShowModal(null);\n  };\n\n  const resetState = () => {\n    setSearchQuery('');\n    setPage(1);\n    setImages([]);\n    setShowModal(null);\n    setLoading(false);\n    setAlt(null);\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <Searchbar onSubmit={handleFormSubmit} />\n        <Spinner />\n        {images.length > 1 && (\n          <ImageGallery images={images} onImageClick={handleImageClick} />\n        )}\n\n        {showModal && (\n          <Modal showModal={showModal} tags={alt} onClose={toggleModal} />\n        )}\n        {images.length > 0 && <Button onClick={loadMoBtn} />}\n        {loading && <Spinner />}\n      </div>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </>\n  );\n}\n\nApp.propTypes = {\n  searchQuery: PropTypes.string,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__2KbyK\",\"searchForm\":\"Searchbar_searchForm__i6L9o\",\"searchFormButton\":\"Searchbar_searchFormButton__32V6e\",\"searchFormButtonLabel\":\"Searchbar_searchFormButtonLabel__2H8yr\",\"searchFormInput\":\"Searchbar_searchFormInput__TeyY_\"};"],"sourceRoot":""}